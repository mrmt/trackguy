  TrackGuy マニュアル
  森本 淳 <morimoto@xantia.citroen.org>
  2000/12/20

  バグ・トラッキング・システム TrackGuy の説明書です。
  ______________________________________________________________________

  目次


  1. TrackGuy とは
     1.1 特徴
     1.2 入手
     1.3 動作環境

  2. インストール
     2.1 Perl の設定
     2.2 Web サーバの設定
     2.3 TrackGuy の展開
     2.4 最低限必要な TrackGuy の設定
        2.4.1 トップページの url ($top_uri)
        2.4.2 データのディレクトリ ($data_dir)
        2.4.3 最後のバグ番号収納ファイル ($last_br_no_file)

  3. カスタマイズ
     3.1 分類、部署を定義する (%categories_table)
     3.2 ページのヘッダ、フッタ
     3.3 全文検索機能

  4. さらに進んだ設定
     4.1 イントラネットで便利に使う
        4.1.1 特定のメールドメインだけを対象とする ($hidden_local_domain)
     4.2 見ための設定
        4.2.1 トップページの前振り文句 ($motd)
        4.2.2 各ページの前振り文句 ($issue)
        4.2.3 トップページのタイトル ($title)
        4.2.4 タイトルの前置文字列 ($title_prefix)
        4.2.5 CSS ファイルの指定 ($css_uri)
        4.2.6 各ページのトップメニュー ($top_menu)
        4.2.7 各ページのフッタ ($page_footer)
     4.3 メール送信関係の設定
        4.3.1 エラー時の送信先 ($errors_to)
        4.3.2 メールの差出人名義 ($default_from)
     4.4 検索機能の設定
        4.4.1 namazu.cgi の位置 ($namazu_uri)

  5. To Do


  ______________________________________________________________________

  1.  TrackGuy とは

  簡単にインストール、運用できることを目指した BTS (バグ・トラッキング・
  システム) です。使い方、データ構造を極力シンプルにしています。

  ソフトウェア開発に限らず、複数名で共同作業を行う際に一番重要なのは情報
  の円滑な共有です。特定のスキルがないと報告も閲覧もできないような BTS
  は、結局特定の人にしか利用されません。すなわち、なんら情報の共有につな
  がりません。 TrackGuy は、豊富な機能の追求や実装よりも、運用者と利用者
  の敷居の低さを重んじています。



  1.1.  特徴

  to be written ...


  1.2.  入手

  <http://trackguy.mrmt.net/> からダウンロードできます。


  1.3.  動作環境

  Perl の 5.005 以降と Jcode.pm, cgi を実行できる Web Server があれば動
  作するはずです。 2000/12/20 現在、 Debian GNU/Linux 2.2, apache 1.3.9,
  perl 5.005_03 の環境で動作を確認しています。

  必要に応じて、メールを送信できる環境 (sendmail, IM の imput, postfix
  といった MTA) も揃えてください。


  2.  インストール

  ここでは、/var/www/bug 以下に TrackGuy の実行環境をつくるものとしま
  す。


  2.1.  Perl の設定

  Perl 5.005 以降がインストールされていることを確認します。 Perl のバー
  ジョンは perl -v を実行すると表示されます。

  Perl の実行ファイルが /usr/bin/perl にあることを確認してください。この
  場所にない場合は、シンボリック・リンクを張るか、 TrackGuy を構成する
  Perl スクリプトの一行目にある #!/usr/bin/perl の記述を現状に合わせてく
  ださい。


  さらに、Jcode.pm をインストールします。 perl -e 'use Jcode' を実行して
  みて、何のエラーやメッセージも出ない場合は、そのシステムには正常に
  Jcode.pm がインストールされているものと思われます。さもなければ、
  <http://www.cpan.org/> などから入手してインストールしてください。

  Debian GNU/Linux の場合は libjcode-pm-perl パッケージとして Jcode.pm
  が提供されていますので、システム管理者権限にて apt-get install
  libjcode-pm-perl としてインストールしてください。


  2.2.  Web サーバの設定

  お使いの Web サーバで、/var/www/bug が http アクセスを通して見えるよう
  にし、拡張子 *.cgi のファイルが CGI として認識され、動作するように設定
  してください。

  また、ディレクトリに対してアクセスした際に、index.cgi がデフォルトの文
  書として扱われるよう設定することをお勧めします。

  以下、apache 1.3 を web サーバとして使うものと仮定し、 httpd.conf の設
  定例を以下に示します。お使いの環境に応じて適宜設定してください。


  AddHandler cgi-script .cgi
  <Directory /var/www/bug>
  Options ExecCGI
  DirectoryIndex index.cgi
  </Directory>

  以下、www.foo.co.jp というホストの web サーバの設定がなされ、
  http://www.foo.co.jp/bug/ にアクセスすると /var/www/bug 以下が見えるも
  のとします。


  2.3.  TrackGuy の展開

  /var/www/bug に TrackGuy のアーカイブを展開します。


  2.4.  最低限必要な TrackGuy の設定

  TrackGuy の各種設定は、TrackGuy を展開したディレクトリの
  lib/trackguy.conf の中身を変更することで行えます。以下、このファイルを
  trackguy.conf と称します。

  基本的には、trackguy.conf の中に記述してあるデフォルト値を適宜書き換え
  ていくだけですが、perl スクリプトとして評価されるファイルですの
  で、perl 文法から外れないように気をつけてください。

  以下の設定が終ったら、http://www.foo.co.jp/bug/ にアクセスして、デフォ
  ルトの TrackGuy トップページ /var/www/bug/index.cgi が出現することを確
  認してください。

  うまく動作しない場合は、Web サーバが出すエラーログを参照してください。
  例えば、Debian GNU/Linux の apache の場合は、デフォルト設定では
  /var/log/apache/error.log にエラーログがありますので、これを tail -f
  で監視するとよいでしょう。


  2.4.1.  トップページの url ($top_uri)

  trackguy.conf の $top_uri を編集します。 http://www.foo.co.jp/bug/ を
  TrackGuy のトップページにする場合なら、 $top_uri =
  'http://www.foo.co.jp/bug' としてください。末尾の / は書かないでくださ
  い。


  2.4.2.  データのディレクトリ ($data_dir)

  trackguy.conf のバグ報告データが収められるディレクトリを指定します。
  /var/www/bug に展開した場合なら、 /var/www/bug/data という空ディレクト
  リができているはずです。これがデータの入るディレクトリになります。

  trackguy プログラムである index.cgi が動作するユーザ権限で、このディレ
  クトリを読み書き可能であることを確認してください。必要に応じて、ディレ
  クトリの owner を CGI が動作するユーザに変更してください。

  例: chown -R www-data.www-data data


  2.4.3.  最後のバグ番号収納ファイル ($last_br_no_file)

  TrackGuy の最後(最新)のバグ番号が記録されるファイルです。 /var/www/bug
  に展開した場合なら、 /var/www/bug/data/lastbr で結構です。

  trackguy プログラムである index.cgi が動作するユーザ権限で、このファイ
  ルが読み書き可能であることを確認してください。

  (参考: ひとつのサイトで複数の TrackGuy を使う場合、このファイルへのパ
  スを TrackGuy 間で揃えておくと、バグ番号が unique に保たれます)



  3.  カスタマイズ

  バグ・トラッキング・システムは、対象となる業務やプロジェクトに合わせて
  カスタマイズしないと運用する意味がありません。以下にカスタマイズの方法
  を示します。


  3.1.  分類、部署を定義する (%categories_table)

  trackguy.conf の %categories_table というハッシュ変数に定義します。デ
  フォルトでは以下のようになっています:


      ('cat_av_dev' => '開発',
       'cat_av_prod' => '制作',
       'cat_av_sales' => 'マーケッティング',
       'cat_bts' => 'ユーザサポート',
       'cat_misc' => 'その他');



  左側のシンボル名は、英数字でつけることを推奨します。


  3.2.  ページのヘッダ、フッタ



  3.3.  全文検索機能

  ...


  4.  さらに進んだ設定



  4.1.  イントラネットで便利に使う


  4.1.1.  特定のメールドメインだけを対象とする ($hidden_local_domain)

  たとえば Foo 株式会社のイントラネット・サーバに TrackGuy を設置し、名
  前@foo.co.jp というメールアドレスしか使わないことがわかっている場合、
  人の指定 (メールアドレスの指定) から、メールドメインを一切省略すること
  ができます。

  trackguy.conf の $hidden_local_domain に '@foo.co.jp' を指定してくださ
  い。


  4.2.  見ための設定



  4.2.1.  トップページの前振り文句 ($motd)

  絞り込み指定なしに TrackGuy トップページにアクセスした際にページ頭に表
  示する文字列を指定します。


  4.2.2.  各ページの前振り文句 ($issue)

  TrackGuy 各ページにアクセスした際にページ頭に表示する文字列を指定しま
  す。

  4.2.3.  トップページのタイトル ($title)

  TrackGuy のトップページのタイトルを設定できます。


  4.2.4.  タイトルの前置文字列 ($title_prefix)

  TrackGuy の各ページのタイトルの prefix を設定できます。空文字列を指定
  すると、prefix は付きません。


  4.2.5.  CSS ファイルの指定 ($css_uri)

  TrackGuy の各ページが参照する CSS (Cascading Style Sheet) ファイルを指
  定します。index.cgi からの相対 uri で指定します。絶対 uri でも構いませ
  ん。空文字列を指定すると、CSS 指定は付きません。


  4.2.6.  各ページのトップメニュー ($top_menu)

  TrackGuy 各ページにアクセスした際にページ頭に表示されるトップメニュー
  の内容を HTML で指定します。


  4.2.7.  各ページのフッタ ($page_footer)

  TrackGuy 各ページのフッタを HTML で指定します。


  4.3.  メール送信関係の設定



  4.3.1.  エラー時の送信先 ($errors_to)

  TrackGuy からメールを送信する際の、デフォルトで設定される Errors-To:
  の宛先。エラーメールを postmaster 以外のユーザに送りたい場合に指定しま
  す。必要なければ空文字列でも構いません。


  4.3.2.  メールの差出人名義 ($default_from)

  TrackGuy からメールを送信する際の差出人名義.


  4.4.  検索機能の設定



  4.4.1.  namazu.cgi の位置 ($namazu_uri)

  Namazu による全文検索を使う場合、その uri を指定します。



  5.  To Do



  o  キャッシュ機構

  o  古いデータの expire

  o  時計アイコンのかきなおし


  o  マイルストーンの実装



